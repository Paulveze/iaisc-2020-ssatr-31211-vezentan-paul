FUNCTION_BLOCK FuzzyLogicHeaterControl  // Block definition

VAR_INPUT				// Define input variables
	error : REAL;
	power : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	command : REAL;
END_VAR

FUZZIFY error			// Fuzzify input variable
	TERM zero := (0, 1) (5,0);
	TERM small := (0, 0) (35, 1) (70, 0); 
	TERM medium := (40, 0) (80,1) (120,0);
	TERM large := (80, 0) (150, 1) (220,0);
	TERM very_large := (180, 0) (300,1);
END_FUZZIFY

FUZZIFY power			// Fuzzify input variable
	TERM zero := (0,1) (20, 0);
	TERM low := (20,0) (35, 1) (50, 0);
	TERM medium := (35,0) (100,1) (175,0);
	TERM high := (125,0) (200,1) (275,0);
	TERM very_high := (225,0) (300,1);
END_FUZZIFY

DEFUZZIFY command			// Defuzzify output variable
	TERM zero := (0, 1) (5, 0); 
	TERM small := (5, 0) (10, 1) (15, 0); 
	TERM low_power := (15, 0) (20,1) (25,0);
	TERM medium_low := (20, 0) (30,1) (40,0);
	TERM medium := (35, 0) (50,1) (65,0);
	TERM medium_large := (50, 0) (75,1) (100,0);
	TERM increased_s := (75, 0) (100,1) (125,0);
	TERM increased_m := (100, 0) (120,1) (140,0);
	TERM increased_l := (120, 0) (140,1) (160,0);
	TERM large := (140, 0) (160, 1) (180,0);
	TERM maximum := (150, 0) (200, 1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

RULEBLOCK No1
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'max' accumulation method

	RULE 1 : IF error IS small AND power IS low THEN command IS small;
	RULE 2 : IF error IS medium AND power IS low THEN command IS low_power; 
	RULE 3 : IF error IS large AND power IS low THEN command IS low_power;
	RULE 4 : IF error IS small AND power IS medium THEN command IS medium_low;
	RULE 5 : IF error IS medium AND power IS medium THEN command IS medium; 
	RULE 6 : IF error IS large AND power IS medium THEN command IS medium_large;
	RULE 7 : IF error IS small AND power IS high THEN command IS increased_s;
	RULE 8 : IF error IS medium AND power IS high THEN command IS increased_m; 
	RULE 9 : IF error IS large AND power IS high THEN command IS increased_l;
	RULE 10 : IF error IS small AND power IS very_high THEN command IS increased_m;
	RULE 11 : IF error IS medium AND power IS very_high THEN command IS increased_l; 
	RULE 12 : IF error IS large AND power IS very_high THEN command IS maximum;
	
	RULE 13 : IF error IS very_large AND power IS low THEN command IS medium_low;
	RULE 14 : IF error IS very_large AND power IS medium THEN command IS medium_large;
	RULE 15 : IF error IS very_large AND power IS high THEN command IS increased_l;
	RULE 16 : IF error IS very_large AND power IS very_high THEN command IS maximum;
	RULE 17 : IF power IS zero THEN command IS zero;
END_RULEBLOCK



END_FUNCTION_BLOCK